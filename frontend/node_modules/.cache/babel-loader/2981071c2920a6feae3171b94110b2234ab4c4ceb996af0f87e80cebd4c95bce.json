{"ast":null,"code":"import{createApi}from\"@reduxjs/toolkit/query/react\";import{authenticatedFetchBaseQuery}from\"../../configuration\";export const friendsApi=createApi({reducerPath:\"friendsApi\",baseQuery:authenticatedFetchBaseQuery,tagTypes:[\"Friend\"],endpoints:builder=>({getFriends:builder.query({query:()=>\"friends\",providesTags:result=>result?[...result.map(_ref=>{let{id}=_ref;return{type:\"Friend\",id};}),{type:\"Friend\",id:\"LIST\"}]:[{type:\"Friend\",id:\"LIST\"}]}),addFriend:builder.mutation({query:friendData=>({url:\"friends\",method:\"POST\",body:friendData}),invalidatesTags:[{type:\"Friend\",id:\"LIST\"}]}),increaseScore:builder.mutation({query:_ref2=>{let{friendId,points}=_ref2;return{url:\"friends/\".concat(friendId,\"/increase-score?points=\").concat(points),method:\"PUT\"};},invalidatesTags:(result,error,_ref3)=>{let{friendId}=_ref3;return[{type:\"Friend\",id:friendId}];}}),decreaseScore:builder.mutation({query:_ref4=>{let{friendId,points}=_ref4;return{url:\"friends/\".concat(friendId,\"/decrease-score?points=\").concat(points),method:\"PUT\"};},invalidatesTags:(result,error,_ref5)=>{let{friendId}=_ref5;return[{type:\"Friend\",id:friendId}];}}),deleteFriend:builder.mutation({query:friendId=>({url:\"friends/\".concat(friendId),method:\"DELETE\"}),invalidatesTags:(result,error,friendId)=>[{type:\"Friend\",id:friendId}]})})});export const{useGetFriendsQuery,useAddFriendMutation,useIncreaseScoreMutation,useDecreaseScoreMutation,useDeleteFriendMutation}=friendsApi;","map":{"version":3,"names":["createApi","authenticatedFetchBaseQuery","friendsApi","reducerPath","baseQuery","tagTypes","endpoints","builder","getFriends","query","providesTags","result","map","_ref","id","type","addFriend","mutation","friendData","url","method","body","invalidatesTags","increaseScore","_ref2","friendId","points","concat","error","_ref3","decreaseScore","_ref4","_ref5","deleteFriend","useGetFriendsQuery","useAddFriendMutation","useIncreaseScoreMutation","useDecreaseScoreMutation","useDeleteFriendMutation"],"sources":["/Users/lukasbajer/Desktop/git/homies-fe/src/services/api/friends/friendsApi.js"],"sourcesContent":["import {createApi} from \"@reduxjs/toolkit/query/react\";\nimport {authenticatedFetchBaseQuery} from \"../../configuration\";\n\nexport const friendsApi = createApi({\n    reducerPath: \"friendsApi\",\n    baseQuery: authenticatedFetchBaseQuery,\n    tagTypes: [\"Friend\"],\n    endpoints: (builder) => ({\n        getFriends: builder.query({\n            query: () => `friends`,\n            providesTags: (result) =>\n                result\n                    ? [...result.map(({id}) => ({type: \"Friend\", id})), {type: \"Friend\", id: \"LIST\"}]\n                    : [{type: \"Friend\", id: \"LIST\"}],\n        }),\n\n        addFriend: builder.mutation({\n            query: (friendData) => ({\n                url: `friends`,\n                method: \"POST\",\n                body: friendData,\n            }),\n            invalidatesTags: [{type: \"Friend\", id: \"LIST\"}],\n        }),\n\n        increaseScore: builder.mutation({\n            query: ({friendId, points}) => ({\n                url: `friends/${friendId}/increase-score?points=${points}`,\n                method: \"PUT\",\n            }),\n            invalidatesTags: (result, error, {friendId}) => [{type: \"Friend\", id: friendId}],\n        }),\n\n        decreaseScore: builder.mutation({\n            query: ({friendId, points}) => ({\n                url: `friends/${friendId}/decrease-score?points=${points}`,\n                method: \"PUT\",\n            }),\n            invalidatesTags: (result, error, {friendId}) => [{type: \"Friend\", id: friendId}],\n        }),\n\n        deleteFriend: builder.mutation({\n            query: (friendId) => ({\n                url: `friends/${friendId}`,\n                method: \"DELETE\",\n            }),\n            invalidatesTags: (result, error, friendId) => [{type: \"Friend\", id: friendId}],\n        }),\n    }),\n});\n\nexport const {\n    useGetFriendsQuery,\n    useAddFriendMutation,\n    useIncreaseScoreMutation,\n    useDecreaseScoreMutation,\n    useDeleteFriendMutation,\n} = friendsApi;"],"mappings":"AAAA,OAAQA,SAAS,KAAO,8BAA8B,CACtD,OAAQC,2BAA2B,KAAO,qBAAqB,CAE/D,MAAO,MAAM,CAAAC,UAAU,CAAGF,SAAS,CAAC,CAChCG,WAAW,CAAE,YAAY,CACzBC,SAAS,CAAEH,2BAA2B,CACtCI,QAAQ,CAAE,CAAC,QAAQ,CAAC,CACpBC,SAAS,CAAGC,OAAO,GAAM,CACrBC,UAAU,CAAED,OAAO,CAACE,KAAK,CAAC,CACtBA,KAAK,CAAEA,CAAA,YAAe,CACtBC,YAAY,CAAGC,MAAM,EACjBA,MAAM,CACA,CAAC,GAAGA,MAAM,CAACC,GAAG,CAACC,IAAA,MAAC,CAACC,EAAE,CAAC,CAAAD,IAAA,OAAM,CAACE,IAAI,CAAE,QAAQ,CAAED,EAAE,CAAC,EAAC,CAAC,CAAE,CAACC,IAAI,CAAE,QAAQ,CAAED,EAAE,CAAE,MAAM,CAAC,CAAC,CAC/E,CAAC,CAACC,IAAI,CAAE,QAAQ,CAAED,EAAE,CAAE,MAAM,CAAC,CAC3C,CAAC,CAAC,CAEFE,SAAS,CAAET,OAAO,CAACU,QAAQ,CAAC,CACxBR,KAAK,CAAGS,UAAU,GAAM,CACpBC,GAAG,UAAW,CACdC,MAAM,CAAE,MAAM,CACdC,IAAI,CAAEH,UACV,CAAC,CAAC,CACFI,eAAe,CAAE,CAAC,CAACP,IAAI,CAAE,QAAQ,CAAED,EAAE,CAAE,MAAM,CAAC,CAClD,CAAC,CAAC,CAEFS,aAAa,CAAEhB,OAAO,CAACU,QAAQ,CAAC,CAC5BR,KAAK,CAAEe,KAAA,MAAC,CAACC,QAAQ,CAAEC,MAAM,CAAC,CAAAF,KAAA,OAAM,CAC5BL,GAAG,YAAAQ,MAAA,CAAaF,QAAQ,4BAAAE,MAAA,CAA0BD,MAAM,CAAE,CAC1DN,MAAM,CAAE,KACZ,CAAC,EAAC,CACFE,eAAe,CAAEA,CAACX,MAAM,CAAEiB,KAAK,CAAAC,KAAA,OAAE,CAACJ,QAAQ,CAAC,CAAAI,KAAA,OAAK,CAAC,CAACd,IAAI,CAAE,QAAQ,CAAED,EAAE,CAAEW,QAAQ,CAAC,CAAC,EACpF,CAAC,CAAC,CAEFK,aAAa,CAAEvB,OAAO,CAACU,QAAQ,CAAC,CAC5BR,KAAK,CAAEsB,KAAA,MAAC,CAACN,QAAQ,CAAEC,MAAM,CAAC,CAAAK,KAAA,OAAM,CAC5BZ,GAAG,YAAAQ,MAAA,CAAaF,QAAQ,4BAAAE,MAAA,CAA0BD,MAAM,CAAE,CAC1DN,MAAM,CAAE,KACZ,CAAC,EAAC,CACFE,eAAe,CAAEA,CAACX,MAAM,CAAEiB,KAAK,CAAAI,KAAA,OAAE,CAACP,QAAQ,CAAC,CAAAO,KAAA,OAAK,CAAC,CAACjB,IAAI,CAAE,QAAQ,CAAED,EAAE,CAAEW,QAAQ,CAAC,CAAC,EACpF,CAAC,CAAC,CAEFQ,YAAY,CAAE1B,OAAO,CAACU,QAAQ,CAAC,CAC3BR,KAAK,CAAGgB,QAAQ,GAAM,CAClBN,GAAG,YAAAQ,MAAA,CAAaF,QAAQ,CAAE,CAC1BL,MAAM,CAAE,QACZ,CAAC,CAAC,CACFE,eAAe,CAAEA,CAACX,MAAM,CAAEiB,KAAK,CAAEH,QAAQ,GAAK,CAAC,CAACV,IAAI,CAAE,QAAQ,CAAED,EAAE,CAAEW,QAAQ,CAAC,CACjF,CAAC,CACL,CAAC,CACL,CAAC,CAAC,CAEF,MAAO,MAAM,CACTS,kBAAkB,CAClBC,oBAAoB,CACpBC,wBAAwB,CACxBC,wBAAwB,CACxBC,uBACJ,CAAC,CAAGpC,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}